# Generated by Django 3.1.2 on 2021-01-27 12:56
from pathlib import Path

from django.db import migrations, models
from django.db.transaction import atomic

from backend import settings
from backup.models.hackernews import HackerNewsSource
from backup.models.reddit import RedditSource
from backup.models.rsync import RsyncSource
from backup.models.twitter import TwitterSource
from timeline.models import Entry


@atomic
def set_source(app, schema_editor):
    """
    - Set the "source" attribute
    - Replace 'geo.location.current' schema with 'activity.location'
    """
    rsync_sources_by_key = {
        s.key: s.id for s in RsyncSource.objects.all()
    }
    reddit_sources_by_username = {
        s.reddit_username: s.id for s in RedditSource.objects.all()
    }
    twitter_sources_by_username = {
        s.twitter_username: s.id for s in TwitterSource.objects.all()
    }
    hackernews_sources_by_username = {
        s.hackernews_username: s.id for s in HackerNewsSource.objects.all()
    }

    for entry in Entry.objects.all():
        if entry.schema.startswith('file'):
            key = Path(entry.extra_attributes['path']).relative_to(settings.BACKUPS_ROOT).parts[0]
            if key in rsync_sources_by_key:
                entry.source = f"{RsyncSource.source_name}/{rsync_sources_by_key[key]}"
        elif entry.schema.startswith('social.twitter'):
            if entry.extra_attributes['post_user'] in twitter_sources_by_username:
                entry.source = f"{TwitterSource.source_name}/{twitter_sources_by_username[entry.extra_attributes['user_id']]}"
        elif entry.schema.startswith('social.hackernews'):
            if entry.extra_attributes['post_user'] in hackernews_sources_by_username:
                entry.source = f"{HackerNewsSource.source_name}/{hackernews_sources_by_username[entry.extra_attributes['user_id']]}"
        elif entry.schema.startswith('social.reddit'):
            if entry.extra_attributes['post_user'] in reddit_sources_by_username:
                entry.source = f"{RedditSource.source_name}/{reddit_sources_by_username[entry.extra_attributes['user_id']]}"
        elif entry.schema == 'social.blog.article':
            # RSS entries update themselves, so the source should be updated
            pass
        elif entry.schema == 'geo.point.current':
            # The source was already saved under extra_attributes
            entry.source = entry.extra_attributes['source']
            entry.schema = 'activity.location'
            del entry.extra_attributes['source']

        entry.save()


class Migration(migrations.Migration):

    dependencies = [
        ('timeline', '0005_auto_20210110_1817'),
    ]

    operations = [
        migrations.AddField(
            model_name='entry',
            name='source',
            field=models.CharField(default='', max_length=100),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['source'], name='timeline_en_source_daa269_idx'),
        ),
        migrations.RunPython(set_source),
    ]
