# Generated by Django 3.1.2 on 2021-01-27 12:56
import logging

from django.db import migrations, models
from django.db.transaction import atomic

from backup.models.hackernews import HackerNewsSource
from backup.models.reddit import RedditSource
from timeline.models import Entry

logger = logging.getLogger(__name__)


@atomic
def fix_source(app, schema_editor):
    """
    - Fix the source attribute (RedditSource/1 -> reddit/1)
    - Fix the source attribute (HackerNewsSource/1 -> hackernews/1)
    """
    entries = Entry.objects.filter(source__startswith='RedditSource/')
    logger.info(f"Fixing source on {entries.count()} reddit entries")
    for entry in entries:
        entry.source = entry.source.replace('RedditSource', RedditSource.source_name)
        entry.save()

    entries = Entry.objects.filter(source__startswith='HackerNewsSource/')
    logger.info(f"Fixing source on {entries.count()} hacker news entries")
    for entry in entries:
        entry.source = entry.source.replace('HackerNewsSource', HackerNewsSource.source_name)
        entry.save()

    logger.info("Done")


class Migration(migrations.Migration):

    dependencies = [
        ('timeline', '0006_auto_20210127_1256'),
    ]

    operations = [
        migrations.RunPython(fix_source),
    ]
